@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<script src="/js/moment.js"></script>
<script src="/js/calendar.js"></script>
<script src="/js/locale.js"></script>
<link rel="stylesheet" href="/css/calendar.css" />
<style>
    .fc-view-container {
        display: none;
    }

    #class-table table {
        width: 100%;
        border: 1px solid #cdcdcd;
        border-collapse: separate;
    }

        #class-table table thead tr {
            background-color: #525252;
            color: #fff;
            font-weight: normal;
        }

            #class-table table thead tr th {
                height: 30px;
                padding: 3px 6px;
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
                text-align: center;
                border: 1px solid #ccc;
                font-weight: bold;
            }

        #class-table table tbody tr td {
            border: 1px solid #ccc;
            vertical-align: top;
            padding: 2px;
            text-align: center;
            height: 36px;
            text-align: center;
            vertical-align: middle !important;
        }
</style>
<script>
    $(function () {

        $("#F_Semester").bindSelect({
            url: "/SchoolManage/School_Semester/GetGridSelect",
            id: "F_Id",
            text: "F_Name"
        });
        $("#F_Year").bindSelect({
            dictionary: 'F_Year',
            displayBlank: false
        });
        $("#F_Divis_ID").bindSelect({
            url: "/SystemManage/Organize/GetSelectJsonByCategoryId?keyword=Division",
        });
        $("#F_Divis_ID").change(function () {
            changeDivis();
        });
        $("#F_Course").change(function () {
            changeTeacher();
        });
        $("#F_Teacher").change(function () {
            search();
        });

        changeTeacher();
        //$("#btn_search").click(function () {

        //});
    });
    function search() {
        if ($("#F_Year").val() == "") {
            $.modalAlert("请选择年度！", "warning");
            return;
        }
        if ($("#F_Semester").val() == "") {
            $.modalAlert("请选择学期！", "warning");
            return;
        }
        //if ($("#F_Teacher").val() == "") {
        //    $.modalAlert("请选择教师！", "warning");
        //    return;
        //}
        InitTimeTable();
    }
    function changeDivis() {
        $("#F_Course").bindSelect({
            url: "/SchoolManage/School_Grade_Course/GetCourseSelectJson?F_Divis_ID=" + $("#F_Divis_ID").val(),
            id: "F_Id",
            text: "F_Name"
        });
        changeTeacher();
    }

    function changeTeacher() {
        $("#F_Teacher").find("option").remove();
        $("#F_Teacher").bindSelect({
            url: "/SchoolManage/School_Course_Teacher/GetTeacherByCourse?F_Course=" + $("#F_Course").val(),
            id: "F_Id",
            text: "F_Name"
        });
    }

    //初始化
    function InitTimeTable() {
        var startDate = $('#calendar').fullCalendar('getDate');
        startDate = moment(startDate).isoWeekday(1);
        //var startDate = moment().isoWeekday(1)
        //$('#calendar').fullCalendar('gotoDate', startDate)
        getClassTable(startDate.format('YYYY-MM-DD'), startDate.add(6, 'days').format('YYYY-MM-DD'))
    }
    function getClassTable(startDate, endDate) {
        //classTable.loadClassHour(getTimeJson(), null);
        classTable.clearClasses();
        classTable.loadClassHour({
            AM: [{
                ClassHour: "1",
                ClassHourCh: "第1节",
                ClassTime: "",
            }, {
                ClassHour: "2",
                ClassHourCh: "第2节",
                ClassTime: "",
            }, {
                ClassHour: "3",
                ClassHourCh: "第3节",
                ClassTime: "",
            }, {
                ClassHour: "4",
                ClassHourCh: "第4节",
                ClassTime: "",
            }],
            CM: [{
                ClassHour: "5",
                ClassHourCh: "第5节",
                ClassTime: "",
            }],
            PM: [{
                ClassHour: "6",
                ClassHourCh: "第6节",
                ClassTime: "",
            }, {
                ClassHour: "7",
                ClassHourCh: "第7节",
                ClassTime: "",
            }, {
                ClassHour: "8",
                ClassHourCh: "第8节",
                ClassTime: "",
            }],
            EN: [{
                ClassHour: "9",
                ClassHourCh: "第9节",
                ClassTime: "",
            }, {
                ClassHour: "10",
                ClassHourCh: "第10节",
                ClassTime: "",
            }, {
                ClassHour: "11",
                ClassHourCh: "第11节",
                ClassTime: "",
            }, {
                ClassHour: "12",
                ClassHourCh: "第12节",
                ClassTime: "",
            }]
        }, false);
        classTable.setClasses(getData(startDate, endDate));
    }

    function getData(startDate, endDate) {
        var teacher = $("#F_Teacher").val();
        var objs = [];
        $.ajax({
            url: "/ScheduleManage/School_Teacher_Timetable/GetTeacherTimetable?F_Semester=" + $("#F_Semester").val() + "&F_Year=" + $("#F_Year").val() + "&F_Teacher=" + teacher + "&startDate=" + startDate + "&endDate=" + endDate,
            dataType: "json",
            async: false,
            success: function (datas) {
                for (var x = 0; x < datas.length; x++) {
                    var data = datas[x];
                    if (data.F_Teacher1 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher1, data.F_Course1, data.F_Week, 1));
                    if (data.F_Teacher2 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher2, data.F_Course2, data.F_Week, 2));
                    if (data.F_Teacher3 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher3, data.F_Course3, data.F_Week, 3));
                    if (data.F_Teacher4 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher4, data.F_Course4, data.F_Week, 4));
                    if (data.F_Teacher5 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher5, data.F_Course5, data.F_Week, 5));
                    if (data.F_Teacher6 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher6, data.F_Course6, data.F_Week, 6));
                    if (data.F_Teacher7 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher7, data.F_Course7, data.F_Week, 7));
                    if (data.F_Teacher8 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher8, data.F_Course8, data.F_Week, 8));
                    if (data.F_Teacher9 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher9, data.F_Course9, data.F_Week, 9));
                    if (data.F_Teacher10 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher10, data.F_Course10, data.F_Week, 10));
                    if (data.F_Teacher11 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher11, data.F_Course11, data.F_Week, 11));
                    if (data.F_Teacher12 == teacher)
                        objs.push(getmodel(data.F_GradeId, data.F_Class, data.F_Teacher12, data.F_Course12, data.F_Week, 12));
                }
            }
        });
        console.log(objs)
        return objs;
    }
    function getmodel(F_GradeId, f_Class, teaId, courseId, dateIndex, lessonIndex) {
        var csName = top.clients.course[courseId] == null ? "" : top.clients.course[courseId].F_Name;
        var className = top.clients.organize[f_Class] == null ? "" : top.clients.organize[f_Class].fullname;
        var GradeName = top.clients.organize[F_GradeId] == null ? "" : top.clients.organize[F_GradeId].fullname;
        return {
            teacherName: csName,
            teacherId: f_Class,
            courseName: GradeName + "<br />" + className + "<br />",
            courseId: courseId,
            dateIndex: dateIndex,
            lessonIndex: lessonIndex,
            roomId: 0
        };
    }
    function btn_Upd(celldate, tId, teacherName, cId, courseName, dateIndex, lessonIndex) {
        var Grade_ID = "";// $("#F_Grade_ID").val();
        var F_Class = tId;
        var F_Semester = $("#F_Semester").val();
        var parms = "celldate=" + celldate + "&tId=" + $("#F_Teacher").val() + "&teacherName=" + teacherName + "&F_Semester=" + escape(F_Semester)
            + "&cId=" + cId + "&courseName=" + escape(courseName) + "&dateIndex=" + dateIndex
            + "&lessonIndex=" + lessonIndex + "&Grade_ID=" + Grade_ID + "&F_Class=" + F_Class;
        $.modalOpen({
            id: "Form",
            title: "调整",
            url: "/ScheduleManage/School_Teacher_Timetable/Form?" + parms,
            width: "300px",
            height: "410px",
            callBack: function (iframeId) {
                top.frames[iframeId].submitForm(function () {
                    search();
                    //$("#btn_search").click();
                });
            }
        });
    }
</script>

<div class="topPanel">
    <div class="toolbar">
    </div>
    <div class="search">
        <table>
            <tr>
                <th class="formTitle">搜索：</th>
                <td>
                    <div class="input-group" style="margin-right:10px;width:100px;">
                        <select id="F_Year" name="F_Year" class="form-control">
                            <option value="">选择年度</option>
                        </select>
                    </div>
                </td>
                <td>
                    <div class="input-group" style="margin-right:10px;width:200px;">
                        <select id="F_Semester" name="F_Semester" class="form-control">
                            <option value="">选择学期</option>
                        </select>
                    </div>
                </td>
                <td>
                    <div class="input-group" style="margin-right:10px;width:200px;">
                        <select id="F_Divis_ID" name="F_Divis_ID" class="form-control">
                            <option value="">选择学部</option>
                        </select>
                    </div>
                </td>
                <td>
                    <div class="input-group" style="margin-right:10px;width:200px;">
                        <select id="F_Course" name="F_Course" class="form-control">
                            <option value="">选择科目</option>
                        </select>
                    </div>
                </td>
                <td>
                    <div class="input-group" style="margin-right:10px;width:200px;">
                        <select id="F_Teacher" name="F_Teacher" class="form-control">
                            <option value="">选择教师</option>
                        </select>
                    </div>
                </td>
                @*<td>
                    <div class="input-group">
                        <span class="input-group-btn">
                            <button id="btn_search" type="button" class="btn  btn-primary"><i class="fa fa-search"></i></button>
                        </span>
                    </div>
                </td>*@
            </tr>
        </table>
    </div>
</div>
<div class="topPanel" style="padding:10px">
    <div id="calendar">
    </div>

    <div id="class-table">
    </div>
</div>
<script>
    var classTable = new classTable()
    $(function () {
        $('#calendar').fullCalendar({
            locale: 'zh-cn',
            height: 600,
            defaultView: "agendaWeek",
            header: {
                left: 'prev',
                center: 'title',
                right: 'next today'
            },
        })
        classTable.init({
            $container: $('#class-table')
        })
        function generateDateAxis(config) {
            // 合并参数
            var p = Object.assign({
                // 类型
                type: '年',
                // 方向
                direction: 'prev',
                // 模板
                source: '',
                target: 'YYYYMMDD',
                // 开始
                start: moment(),
                // 时间轴长度，默认2个
                length: 2,
                // 处理时间轴单个时间的方法
                forEach: function (item, idx, axis) {
                    return item;
                },
                // 停止添加时间轴元素的方法
                stop: function (item, idx, axis) {
                    return false;
                },
                // 升序 ascend(asc) || 降序 descend(desc)
                sort: 'asc'
            }, config);

            // 时间类型映射表
            var DATE_TYPE_MAP = {
                'year|年': 'years',
                'month|月': 'months',
                'week|周|星期': 'weeks',
                'day|日|天': 'days',
            };
            // 类型
            var type = '', tstr, treg;

            // 根据参数type获取moment需要加减的单位(年|月|星期|日)
            for (tstr in DATE_TYPE_MAP) {
                treg = new RegExp(tstr);
                if (treg.test(p.type)) {
                    type = DATE_TYPE_MAP[tstr];
                    break;
                }
            }

            var direction = p.direction === 'prev' ? 'subtract' : 'add', // 减 || 加
                Sattern = p.source || p.target, // 源模板
                Tpattern = p.target, // 目标模板
                start = p.start, // 开始时间
                sort = p.sort === 'asc' ? 'unshift' : 'push', // 排序
                unit, // 时间轴单个元素
                idx = 0, // 时间轴下标
                newStart;

            // 循环获取单个时间，并通过forEach方法处理，然后放入result数组返回
            var axis = (function loop(l, r) {

                newStart = moment(start, Sattern)[direction](idx, type).format(Tpattern);

                // 处理生成的时间轴元素
                unit = p.forEach(newStart, idx, r);

                // 处理后的元素合法则放进结果数组
                r[sort](unit);

                if (r.length === l || p.stop(unit, idx, r)) {
                    return r;
                }

                idx++;

                return loop(l, r);

            })(p.length, []);

            return axis;
        }
        //初始化
        function init() {
            var startDate = moment().isoWeekday(1)
            $('#calendar').fullCalendar('gotoDate', startDate)
            getClassTable1(startDate.format('YYYY-MM-DD'), startDate.add(6, 'days').format('YYYY-MM-DD'))
        }
        function getClassTable1(startDate, endDate) {
            console.log(startDate, endDate)

            //classTable.setClasses([{
            //  teacherName: 'www',
            //  teacherId: 12,
            //  courseName: 'wwwww',
            //  courseId: 3333,
            //  dateIndex: 1,
            //  lessonIndex: 1,
            //  roomId: 0
            //}])
            //$.ajax({

            //})

        }

        function bindEvent() {
            var curDateAxis = generateDateAxis({
                type: 'day',
                direction: 'next',
                source: 'YYYYMM',
                target: 'YYYY-MM-DD',
                start: moment().isoWeekday(1),
                length: 7,
                forEach: function (item, idx, axis) {
                    return item;
                },
                stop: function (item, idx, axis) {
                    return false;
                },
                sort: 'desc'
            })
            getClassTable(curDateAxis[0], curDateAxis[curDateAxis.length - 1])
            classTable.setHeaderDate(curDateAxis)
            $('#calendar').find('.fc-left, .fc-right').click(function () {
                var date = $('#calendar').fullCalendar('getDate')
                var dateAxis = generateDateAxis({
                    type: 'day',
                    direction: 'next',
                    source: 'YYYYMM',
                    target: 'MM-DD',
                    start: date,
                    length: 7,
                    forEach: function (item, idx, axis) {
                        return item;
                    },
                    stop: function (item, idx, axis) {
                        return false;
                    },
                    sort: 'desc'
                })
                classTable.setHeaderDate(dateAxis)
                getClassTable(dateAxis[0], dateAxis[curDateAxis.length - 1])
            })
            $('#class-table').on('dblclick', 'tbody td', function () {
                var tId = $(this).attr('teacherid');
                var cId = $(this).attr('courseid');
                var teacherName = $(this).attr('teacherName');
                var courseName = $(this).find("div").first().html();//.attr('courseName');

                var dateIndex = $(this).attr('id').split('_')[1]
                var lessonIndex = $(this).attr('id').split('_')[2]
                var celldate = $('#class-table .date-col:eq(' + (Number(dateIndex) - 1) + ')').html()

                //if (tId && cId) {
                btn_Upd(celldate, tId, teacherName, cId, courseName, dateIndex, lessonIndex);
                //}
            })
        }
        bindEvent()
    })
</script>