@{Layout = "~/Views/Shared/_Index.cshtml";}
<script>
    var multiSelect = $.request('ml')
    //全局变量
    function getTree() { return $("#itemTree"); }
    function getGrid() { return $("#gridList"); }
    var storageId = $.request("storageId");
    var goodsStatus = $.request("goodsStatus");
    $(function () {
        $('#layout').layout();
        initTree();
        initGrid(multiSelect);
        $("#btn_search").bind("click", () => reloadGrid());
        $("#txt_keyword").bind("input", () => reloadGrid());

    })

    // 初始化树
    function initTree() {
        getTree().jqGrid({
            styleUI: 'Bootstrap',
            treeGrid: true,
            url: "/GoodsManage/Category/GetTree",
            treeGridModel: "adjacency",
            datatype: "json",
            gridview: true,
            altRows: true,
            viewrecords: true,
            autoGridWidth: true,
            multiselect: true, //开启多选,
            rowNum: 15,
            shrinkToFit: true,
            autoGridHeight: true,
            jsonReader: {
                root: function (r) { return r.data; }
            },
            height: window.innerHeight * 0.90,
            width: window.innerWidth * 0.19,
            ExpandColumn: 'name',
            ExpandColClick: false,
            onSelectRow: reloadGrid,
            colModel: [
                { label: '物品类别', name: 'name', width: 100, align: 'left' },
                { label: '主键', name: "id", width: 150, align: 'left', key: true, hidden: true },
            ],
            multiselect: false,
            rowNum: "all",
        });
    }

    // 初始化数据表格
    function initGrid(multiSelect) {
        getGrid().dataGrid({
            url: "/GoodsManage/Stock/GetCanOutList?storageId=" + storageId + "&&goodsStatus=" + goodsStatus,
            autoGridHeight: () => $(window).height() * 0.78,
            colModel: [
                { label: '仓库主键', name: 'storageId', key: true, hidden: true },
                { label: '主键', name: 'id', key: true, hidden: true },
                { label: '物品编码', name: 'code', sortable: false },
                { label: '物品名称', name: 'name', sortable: false },
                { label: '条形码', name: 'barCode', sortable: false },
                { label: '规格', name: 'size', sortable: false },
                { label: '型号', name: 'model', sortable: false },
                { label: '物品单价', name: 'unitPrice', sortable: false },
                { label: '统计库存', name: 'total', sortable: false },
                { label: '可用库存', name: 'usableQuantity', sortable: false },
                { label: '安全库存上限', name: 'most', sortable: false },
                { label: '安全库存下限', name: 'least', sortable: false },
                {
                    label: '物品状态', name: 'status', sortable: false,
                    formatter: function (cellvalue) {
                        if (!cellvalue) return "";
                        return top.clients.dataItems["GoodsStatus"] == null ? "" : top.clients.dataItems.GoodsStatus[cellvalue];
                    }
                },
            ],
            loadComplete: function () {
                this.p.postData.categoryId = null;
            },
            multiselect: multiSelect === 'undefined' ? false : multiSelect,
            pager: "#gridPager",
            viewrecords: true
        });
    }
    //提交
    function submit() {
        var data
        if (!multiSelect) {
            data = getGrid().getRowData(getGrid().getGridParam("selrow"));
        } else {
            data = []
            var selectedId = getGrid().jqGrid('getGridParam', 'selarrrow')
            $.each(selectedId, function (i, item) {
                data.push(getGrid().jqGrid("getRowData", item))
            })

        }
        console.table(data);
        $.modalClose();
        return data;

    }
    // 重载数据表格
    function reloadGrid(categoryId) {
        getGrid().setGridParam(
            {
                postData: { categoryId: categoryId, keyword: $("#txt_keyword").val(), storageId: storageId, goodsStatus: goodsStatus }
            }
        ).trigger('reloadGrid');
    }
</script>
<div class="ui-layout" id="layout" style="height: 100%; width: 100%;">
    <div class="ui-layout-west">
        <table id="itemTree"></table>
    </div>
    <div class="ui-layout-center">
        <div class="topPanel">
            <div class="search">
                <table>
                    <tr>
                        <td>
                            <div class="input-group">
                                <input id="txt_keyword" type="text" class="form-control" placeholder="名称" style="width: 200px;">
                                <span class="input-group-btn">
                                    <button id="btn_search" type="button" class="btn  btn-primary"><i class="fa fa-search"></i></button>
                                </span>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="gridPanel">
            <table id="gridList"></table>
            <div id="gridPager"></div>
        </div>
    </div>
</div>