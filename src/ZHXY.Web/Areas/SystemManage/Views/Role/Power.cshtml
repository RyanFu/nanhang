@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    var setting = {
        view: {
            addHoverDom: addHoverDom,
            removeHoverDom: removeHoverDom,
            selectedMulti: false
        },
        check: {
            enable: true,
        },
        data: {
            simpleData: {
                enable: true
            }
        },
        edit: {
            enable: true
        },
        callback: {
            onCheck: onCheckz,
        },
    };

    var zNodes = [];
    $(document).ready(function () {
        $.fn.zTree.init($("#treeDemo"), setting, zNodes);
    });
    var nodeArr = [];
    function onCheckz(event, treeId, treeNode) {
        console.log(treeNode.tId + ", " + treeNode.name + "," + treeNode.checked);
        if (treeNode.checked == true) {
            if (treeNode.isParent) {
                for (var i = 0; i < treeNode.children.length; i++) {
                    nodeConcat = {
                        id: treeNode.children[i].id,
                        name: treeNode.children[i].name,
                        checked: treeNode.children[i].checked,
                    };
                    nodeArr = nodeArr.concat(nodeConcat);
                    console.log("父节点选中之后：", nodeArr);
                }
            } else if (!treeNode.isParent) {
                nodeConcat = {
                    id: treeNode.id,
                    name: treeNode.name,
                    checked: treeNode.checked,
                };
                nodeArr = nodeArr.concat(nodeConcat);
                console.log("子节点选中之后：", nodeArr);
            }
        }
        else if (treeNode.checked == false) {
            if (treeNode.isParent) {
                for (var i = treeNode.children.length - 1; i >= 0; i--) {
                    for (var j = nodeArr.length - 1; j >= 0; j--) {
                        if (nodeArr[j].id == treeNode.children[i].id) {
                            nodeArr.splice(j, 1);
                        }
                    }
                }
            } else if (!treeNode.isParent) {
                nodeArr.splice(nodeArr.length - 1, 1);
                console.log("子节点未选中之后：", nodeArr);
            }
        }
    };
    var newCount = 1;
    function addHoverDom(treeId, treeNode) {
        var sObj = $("#" + treeNode.tId + "_span");
        if (treeNode.editNameFlag || $("#addBtn_" + treeNode.tId).length > 0) return;
        var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
            + "' title='add node' onfocus='this.blur();'></span>";
        sObj.after(addStr);
        var btn = $("#addBtn_" + treeNode.tId);
        if (btn) btn.bind("click", function () {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo");
            zTree.addNodes(treeNode, { id: (100 + newCount), pId: treeNode.id, name: "new node" + (newCount++) });
            return false;
        });
    };
    function removeHoverDom(treeId, treeNode) {
        $("#addBtn_" + treeNode.tId).unbind().remove();
    };
    function zonclick() {
        console.log(nodeArr);
    }
            //-->
</script>
    <div class="content_wrap">
        <div class="zTreeDemoBackground left">
            <ul id="treeDemo" class="ztree"></ul>
        </div>
        <div class="right">
            <ul class="info">
                <li class="title">
                    <h2>1、样式文件说明</h2>
                    <ul class="list">
                        <li class="highlight_red">请使用 css/metroStyle 目录内的样式文件 和 图片</li>
                        <li>感谢网友 rqx110 提供， 仅供参考</li>
                    </ul>
                </li>
            </ul>
            <button type="button" onclick=zonclick();>nodes</button>
        </div>
    </div>
